// generated from rosidl_adapter/resource/msg.idl.em
// with input from neo_msgs2/msg/EmergencyStopState.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module neo_msgs2 {
  module msg {
    module EmergencyStopState_Constants {
      @verbatim (language="comment", text=
        "Possible EMStop States" "\n"        "system operatign normal")
      const int16 EMFREE = 0;
      @verbatim (language="comment", text=
        "emergency stop is active (Button pressed; obstacle in safety field of scanner)")
      const int16 EMSTOP = 1;
      @verbatim (language="comment", text=
        "emergency stop was confirmed system is reinitializing and going back to normal")
      const int16 EMCONFIRMED = 2;
    };
    @verbatim (language="comment", text=
      "This message holds the emergency stop (EMStop) status of the robot. It detects wether an EMStop is caused by the safety laserscanner or the emergency stop buttons. Moreover, it gives signalizes wether the EMStop was confirmed (after Button press stop) and the system is free again.")
    struct EmergencyStopState {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "true = emergency stop signal is issued by button pressed")
      boolean emergency_button_stop;

      @verbatim (language="comment", text=
        "true = emergency stop signal is issued by scanner")
      boolean scanner_stop;

      @verbatim (language="comment", text=
        "true = emergency stop signal issued by some ROS-node")
      boolean software_stop;

      @verbatim (language="comment", text=
        "state (including confimation by key-switch), values see above")
      int16 emergency_state;
    };
  };
};
