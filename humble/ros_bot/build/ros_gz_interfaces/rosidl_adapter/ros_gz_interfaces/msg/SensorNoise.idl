// generated from rosidl_adapter/resource/msg.idl.em
// with input from ros_gz_interfaces/msg/SensorNoise.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module ros_gz_interfaces {
  module msg {
    module SensorNoise_Constants {
      @verbatim (language="comment", text=
        "Noise type")
      const uint8 NONE = 0;
      const uint8 GAUSSIAN = 2;
      const uint8 GAUSSIAN_QUANTIZED = 3;
    };
    @verbatim (language="comment", text=
      "A message for specifying sensor noise.")
    struct SensorNoise {
      @verbatim (language="comment", text=
        "Optional header data.")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "The type of noise")
      uint8 type;

      @verbatim (language="comment", text=
        "Noise mean" "\n"
        "Used by GAUSSIAN and GAUSSIAN_QUANTIZED")
      double mean;

      @verbatim (language="comment", text=
        "Noise standard deviation" "\n"
        "Used by GAUSSIAN and GAUSSIAN_QUANTIZED")
      double stddev;

      @verbatim (language="comment", text=
        "Noise mean bias" "\n"
        "Used by GAUSSIAN and GAUSSIAN_QUANTIZED")
      double bias_mean;

      @verbatim (language="comment", text=
        "Noise standard deviation bias")
      double bias_stddev;

      @verbatim (language="comment", text=
        "Noise precision" "\n"
        "Used by GAUSSIAN_QUANTIZED")
      double precision;

      @verbatim (language="comment", text=
        "For type \"gaussian*\", the standard deviation of the noise used to" "\n"
        "drive a process to model slow variations in a sensor bias.")
      double dynamic_bias_stddev;

      @verbatim (language="comment", text=
        "For type \"gaussian*\", the correlation time in seconds of the" "\n"
        "noise used to drive a process to model slow variations in a sensor bias." "\n"
        "A typical value, when used, would be on the order of" "\n"
        "3600 seconds (1 hour).")
      double dynamic_bias_correlation_time;
    };
  };
};
